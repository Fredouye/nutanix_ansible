- name: Auths to the cluster 
  uri:
    url: '{{ api_url_v3 }}/clusters/list'
    body:
      kind: cluster
      offset: 0
      length: 10
    method: POST
    validate_certs: false
    force_basic_auth: true
    body_format: json
    user: '{{ prism_user }}'
    password: '{{ prism_password }}'
    status_code: 200
    return_content: true
  register: login
  delegate_to: localhost

- name: Sets fact for session cookie
  set_fact:
    session_cookie: '{{ login.set_cookie }}'

- name: Gets VMs list
  uri:
    url: "{{ api_url_v3 }}/vms/list"
    body:
      kind: vm
      offset: 0
      length: 10
    method: POST
    validate_certs: false
    body_format: json
    status_code: 200
    headers: 
      Cookie: '{{ session_cookie }}'
  delegate_to: localhost
  register: vms_list

- name: Gets VM UUIDs from its name
  set_fact:
    vm_uuids: '{{ vms_list.json.entities | json_query(my_query) }}'
  vars:
    my_query: "[? status.name=='{{ inventory_hostname }}'].metadata.uuid"

- name: Ensures VMs are deleted
  uri:
    url: '{{ api_url_v3 }}/vms/{{ item }}'
    method: DELETE
    validate_certs: false
    status_code: 202
    headers: 
      Cookie: '{{ session_cookie }}'
  delegate_to: localhost
  loop: '{{ vm_uuids }}'
