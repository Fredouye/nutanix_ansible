- name: Get VMs list
  uri:
    url: "{{ api_url_v3 }}/vms/list"
    body:
      kind: vm
      offset: 0
      filter: 'vm_name=={{ inventory_hostname }}'
      length: 10
    method: POST
    validate_certs: false
    body_format: json
    status_code: 200
    headers: 
      Cookie: "{{ session_cookie }}"
  delegate_to: localhost
  register: vms_list

- name: Searches for VM in given cluster
  set_fact:
    vm_uuids: '{{ vms_list.json.entities | json_query(my_query) }}'
  vars:
    my_query: "[? status.name=='{{ inventory_hostname }}' && spec.cluster_reference.name=='{{ cluster_name }}'].metadata.uuid"

- name: Exits if VM is already present
  fail:
    msg: '{{ inventory_hostname }} already present in {{ cluster_name }} cluster'
  when: vm_uuids|length|int > 0
